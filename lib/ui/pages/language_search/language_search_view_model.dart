import 'package:flutter_riverpod/flutter_riverpod.dart';

class LanguageSearchViewModel extends StateNotifier<List<Map<String, String>>> {
  LanguageSearchViewModel() : super(_allLanguages);

  static final List<Map<String, String>> _allLanguages = [
    {'name': 'ÌïúÍµ≠Ïñ¥', 'flag': 'üá∞üá∑'},
    {'name': 'English', 'flag': 'üá∫üá∏'},
    {'name': 'Êó•Êú¨Ë™û', 'flag': 'üáØüáµ'},
    {'name': '‰∏≠Êñá', 'flag': 'üá®üá≥'},
    {'name': 'Espa√±ol', 'flag': 'üá™üá∏'},
    {'name': 'Fran√ßais', 'flag': 'üá´üá∑'},
    {'name': 'Italiano', 'flag': 'üáÆüáπ'},
    {'name': 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', 'flag': 'üá¶üá™'},
    {'name': 'Deutsch', 'flag': 'üá©üá™'},
    {'name': 'Portugu√™s', 'flag': 'üáµüáπ'},
    {'name': '–†—É—Å—Å–∫–∏–π', 'flag': 'üá∑üá∫'},
  ];

  void searchLanguage(String query) {
    state = _allLanguages
        .where((language) =>
            language['name']!.toLowerCase().contains(query.toLowerCase()))
        .toList();
  }

  void selectLanguage(Map<String, String> language) {
    print('ÏÑ†ÌÉùÎêú Ïñ∏Ïñ¥: ${language['name']}');
  }
}

final languageSearchViewModel =
    StateNotifierProvider<LanguageSearchViewModel, List<Map<String, String>>>(
  (ref) => LanguageSearchViewModel(),
);
